@using System.Data

@{
    DalEf.DocumentsEntities context = new DalEf.DocumentsEntities();
    var data = context.vOrderForm.OrderByDescending(p=>p.Id).Where(p => p.CompanyUsingServiceId == ((BusinessObjects.Security.PTIdentity)Csla.ApplicationContext.User.Identity).CompanyId);
    }

@Html.DevExpress().GridView(
        settings =>
            {
                settings.Name = "gvOfferGrid";
                settings.CallbackRouteValues = new { Controller = "OrderForm", Action = "OrderFormGridPartial" };
                settings.SettingsLoadingPanel.Text = "Učitavanje";

                settings.SettingsPager.Summary.Text = "Stranica {0} od {1} ({2} reda)";
                settings.SettingsText.EmptyDataRow = "Nema podataka";
                settings.Settings.ShowFilterRow = true;
                settings.Settings.ShowFilterRowMenu = true;
                settings.SettingsPager.PageSize = 13;
                settings.CommandColumn.Visible = true;
                settings.CommandColumn.ButtonType = System.Web.UI.WebControls.ButtonType.Image;
                settings.CommandColumn.ClearFilterButton.Image.Url = @Url.Content("~/Content/images/clear.png");
                settings.CommandColumn.ClearFilterButton.Image.ToolTip = "Očisti rezultate pretrage";
                settings.CommandColumn.ClearFilterButton.Visible = true;

                settings.Settings.ShowHeaderFilterButton = true;
                settings.SettingsPopup.HeaderFilter.Height = 200;
                settings.SettingsText.HeaderFilterOkButton = "Ok";
                settings.SettingsText.HeaderFilterCancelButton = "Odustani";
                settings.SettingsText.HeaderFilterSelectAll = "Označi sve";

                settings.Columns.Add(column =>
                {
                    column.Caption = "";
                    column.SetDataItemTemplateContent(c =>
                    {
                        ViewContext.Writer.Write(

                            //Html.ActionLink("Uredi", "CreateAndEdit", new { Id = DataBinder.Eval(c.DataItem, "Id") }, new { @class = "gridEditButton" }) + "&nbsp" +
                            //Html.ActionLink("Obriši", "#", new { Id = DataBinder.Eval(c.DataItem, "Id")  },
                            //  new { onclick = "Delete()", @class = "gridDelButton" })
                               "<a href=\"#\" onclick=\"Delete(" + DataBinder.Eval(c.DataItem, "Id") + ")\" class=\"gridDelButton\"></a>"
                        );
                    });
                    //column.SetHeaderTemplateContent(c =>
                    //{
                    //    ViewContext.Writer.Write(
                    //        Html.ActionLink("Nova faktura", "CreateAndEdit", new { Id = 0 }).ToHtmlString()
                    //    );
                    //});
                    column.Settings.AllowDragDrop = DevExpress.Utils.DefaultBoolean.False;
                    column.Settings.AllowSort = DevExpress.Utils.DefaultBoolean.False;
                    column.Width = 20;
                });
                
                settings.KeyFieldName = "Id";

                
                settings.Width = System.Web.UI.WebControls.Unit.Percentage(100);

                //settings.Columns.Add("UniqueIdentifier", "Redni broj", DevExpress.Web.Mvc.MVCxGridViewColumnType.TextBox);
                settings.Columns.Add(column =>
                {
                    column.FieldName = "UniqueIdentifier";
                    column.Caption = "Broj narudžbe";
                    column.Width = 90;
                    column.SetDataItemTemplateContent(c =>
                    {
                        ViewContext.Writer.Write(
                            "<a onclick=\"Cursor();\" href=" + @Url.Content("~/Documents/OrderForm/CreateAndEdit/" + DataBinder.Eval(c.DataItem, "Id")) + ">" + DataBinder.Eval(c.DataItem, "UniqueIdentifier") + "</a>"
                        );
                    });

                });

                settings.Columns.Add(column =>
                {
                    column.FieldName = "Name";
                    column.Caption = "Kupac";
                    column.Width = 280;
                    column.ColumnType = DevExpress.Web.Mvc.MVCxGridViewColumnType.TextBox;
                });
                settings.Columns.Add(column =>
                {
                    column.FieldName = "DocumentDateTime";
                    column.Caption = "Datum";
                    column.Width = 95;
                    column.ColumnType = DevExpress.Web.Mvc.MVCxGridViewColumnType.DateEdit;
                    column.CellStyle.HorizontalAlign = System.Web.UI.WebControls.HorizontalAlign.Center;
                    var dateEditproperties = column.PropertiesEdit as DateEditProperties;
                    dateEditproperties.DisplayFormatString = "dd.MM.yyyy";

                });
                settings.Columns.Add("OrderedByPerson", "Kontakt osoba", DevExpress.Web.Mvc.MVCxGridViewColumnType.DateEdit);
                settings.Columns.Add("", "Broj narudžbe", DevExpress.Web.Mvc.MVCxGridViewColumnType.SpinEdit);

                settings.Columns.Add(column =>
                {
                    column.Caption = "Status";
                    column.FieldName = "Statustext";
                    column.Width = 65;
                    column.ColumnType = MVCxGridViewColumnType.HyperLink;
                    column.Settings.HeaderFilterMode = HeaderFilterMode.CheckedList;

                    var props = column.PropertiesEdit as HyperLinkProperties;


                    props.EnableClientSideAPI = true;
                    props.Target = "#";

                    column.SetDataItemTemplateContent(c =>
                    {
                        ViewContext.Writer.Write(
                            "<a href=\"#\" onclick=\"ShowHideRadio(" + "'" + DataBinder.Eval(c.DataItem, "Id") + "'" + "," + "'" + DataBinder.Eval(c.DataItem, "Status") + "'" + ")\">" + DataBinder.Eval(c.DataItem, "Statustext") + "</a>"

                        );
                    });
                });


                settings.HeaderFilterFillItems = (sender, e) =>
                {
                    ASPxGridView grid = (ASPxGridView)sender;
                    if (e.Column.FieldName == "Statustext")
                    {
                        e.Values.Clear();

                        e.AddValue("Otvoren", string.Empty, "[Statustext] == 'Otvoren'");
                        e.AddValue("Poslan", string.Empty, "[Statustext] == 'Poslan'");
                        e.AddValue("Odbijen", string.Empty, "[Statustext] == 'Odbijen'");
                        e.AddValue("Zatvoren", string.Empty, "[Statustext] == 'Zatvoren'");
                        e.AddValue("Obrisan", string.Empty, "[Statustext] == 'Obrisan'");
                    }
                };

                settings.HtmlRowCreated = (sender, e) =>
                {
                    if (e.RowType == DevExpress.Web.ASPxGridView.GridViewRowType.Data)
                    {
                        e.Row.Attributes.Add("onmouseover", "this.style.backgroundColor='#eeeeee';");
                        e.Row.Attributes.Add("onmouseout", "this.style.backgroundColor='white';");
                    }
                };
                
               
                settings.ClientSideEvents.BeginCallback = "function(s, e) { OnStartCallback(s, e); }";
                settings.ClientSideEvents.EndCallback = "function(s, e) { OnEndCallback(s, e); }";

            //}).BindToLINQ("", "", new
            //            EventHandler<DevExpress.Data.Linq.LinqServerModeDataSourceSelectEventArgs>((s, e) =>
            //            {
            //                e.KeyExpression = "Id";
            //                DalEf.DocumentsEntities context = new DalEf.DocumentsEntities();
            //                //e.QueryableSource = context.Documents_Document.OfType<DalEf.Documents_OrderForm>().Where(p => p.CompanyUsingServiceId == ((BusinessObjects.Security.PTIdentity)Csla.ApplicationContext.User.Identity).CompanyId);
            //                e.QueryableSource = context.vOrderForm.Where(p => p.CompanyUsingServiceId == ((BusinessObjects.Security.PTIdentity)Csla.ApplicationContext.User.Identity).CompanyId);
                            
            //            })).GetHtml()
            }).Bind(data).GetHtml()