@using System.Data

@{
    DalEf.MDEntitiesEntities context = new DalEf.MDEntitiesEntities();
    var data = context.MDEntities_Entity.OfType<DalEf.MDEntities_Product>().OrderByDescending(p=> p.Id).Where(p => p.CompanyUsingServiceId == ((BusinessObjects.Security.PTIdentity)Csla.ApplicationContext.User.Identity).CompanyId);
    }

@Html.DevExpress().GridView(
        settings =>
            {
                settings.Name = "gvProductGrid";
                settings.CallbackRouteValues = new { Controller = "Product", Action = "ProductGridPartial" };
                settings.Width = System.Web.UI.WebControls.Unit.Percentage(100);
                settings.SettingsText.EmptyDataRow = "Nema podataka";
                settings.CommandColumn.Visible = true;
                settings.Settings.ShowFilterRow = true;
                settings.Settings.ShowFilterRowMenu = true;
                settings.CommandColumn.ButtonType = System.Web.UI.WebControls.ButtonType.Image;
                settings.CommandColumn.ClearFilterButton.Image.Url = @Url.Content("~/Content/images/clear.png");
                settings.CommandColumn.ClearFilterButton.Image.ToolTip = "Očisti rezultate pretrage";
                settings.CommandColumn.ClearFilterButton.Visible = true;
                settings.SettingsLoadingPanel.Text = "Učitavanje";

                settings.SettingsPager.Summary.Text = "Stranica {0} od {1} ({2} reda)";
                settings.SettingsText.EmptyDataRow = "Nema podataka";
                
                settings.Columns.Add(column =>
                {
                    column.Caption = "";
                    column.SetDataItemTemplateContent(c =>
                    {
                        ViewContext.Writer.Write(
                            //Html.ActionLink("Uredi", "CreateAndEdit", new { Id = DataBinder.Eval(c.DataItem, "Id") }, new { @class = "gridEditButton" }) + "&nbsp" +
                            Html.ActionLink("Obriši", "CreateAndEdit", new { Id = DataBinder.Eval(c.DataItem, "Id") },
                                new { onclick = "return confirm('Da li stvarno želite obrisati?')", @class = "gridDelButton" })
                        );
                    });
                    //column.SetHeaderTemplateContent(c =>
                    //{
                    //    ViewContext.Writer.Write(
                    //        Html.ActionLink("Novi proizvod", "CreateAndEdit", new { Id = 0 }).ToHtmlString()
                    //    );
                    //});
                    column.Settings.AllowDragDrop = DevExpress.Utils.DefaultBoolean.False;
                    column.Settings.AllowSort = DevExpress.Utils.DefaultBoolean.False;
                    column.Width = 20;
                });
                
                settings.KeyFieldName = "Id";



                //settings.Columns.Add("Label", "Šifra", DevExpress.Web.Mvc.MVCxGridViewColumnType.TextBox);
                settings.Columns.Add(column =>
                {
                    column.FieldName = "Label";
                    column.Caption = "Šifra";
                    column.Width = 100;
                });
                //settings.Columns.Add("Name", "Naziv" , DevExpress.Web.Mvc.MVCxGridViewColumnType.TextBox);
                settings.Columns.Add(column =>
                {
                    column.FieldName = "Name";
                    column.Caption = "Naziv";
                    column.SetDataItemTemplateContent(c =>
                    {
                        ViewContext.Writer.Write(
                            "<a onclick=\"Cursor();\" href=" + @Url.Content("~/MDEntities/Product/CreateAndEdit/" + DataBinder.Eval(c.DataItem, "Id")) + ">" + DataBinder.Eval(c.DataItem, "Name") + "</a>"
                        );
                    });

                });
                
               

                //settings.Columns.Add("Tag", "Tag", DevExpress.Web.Mvc.MVCxGridViewColumnType.TextBox);
                settings.Columns.Add(column => {
                    column.FieldName = "UnitId";
                    column.Caption = "Jm";
                    column.Width = 60;
                    column.ColumnType = DevExpress.Web.Mvc.MVCxGridViewColumnType.ComboBox;
                    var comboProperties = column.PropertiesEdit as DevExpress.Web.ASPxEditors.ComboBoxProperties;
                    var items = context.MDEntities_Enums_Unit.Where(p => p.CompanyUsingServiceId == ((BusinessObjects.Security.PTIdentity)Csla.ApplicationContext.User.Identity).CompanyId || p.CompanyUsingServiceId == 0 || p.CompanyUsingServiceId == null);

                    comboProperties.DataSource = items;
                    comboProperties.IncrementalFilteringMode = DevExpress.Web.ASPxEditors.IncrementalFilteringMode.Contains;
                    comboProperties.FilterMinLength = 0;
                    comboProperties.TextField = "Label";
                    comboProperties.ValueField = "Id";
                    comboProperties.ValueType = typeof(int);
                    
                });
                

                settings.Columns.Add(column =>
                {
                    column.FieldName = "WholesalePrice";
                    column.Caption = "Veleprodajna cijena";
                    column.Width = 50;

                    //var items = BusinessObjects.MDEntities.cMDEntities_Enums_EntityGroup_List.GetcMDEntities_Enums_EntityGroup_List();

                    column.ColumnType = DevExpress.Web.Mvc.MVCxGridViewColumnType.SpinEdit;

                    var spinProperties = column.PropertiesEdit as DevExpress.Web.ASPxEditors.SpinEditProperties;
                    spinProperties.DisplayFormatString = "n2";
                    spinProperties.Height = 20;
                    spinProperties.DecimalPlaces = 2;
                    spinProperties.MinValue = 0;

                });
                settings.Columns.Add(column =>
                {
                    column.FieldName = "MDEntities_Enums_EntityGroupId";
                    column.Caption = "Grupa";
                    column.Width = 100;

                    var items = BusinessObjects.MDEntities.cMDEntities_Enums_EntityGroup_List.GetcMDEntities_Enums_EntityGroup_List();

                    column.ColumnType = DevExpress.Web.Mvc.MVCxGridViewColumnType.ComboBox;

                    var comboBoxProperties = column.PropertiesEdit as DevExpress.Web.ASPxEditors.ComboBoxProperties;



                    comboBoxProperties.Height = 20;
                    comboBoxProperties.DataSource = items;
                    comboBoxProperties.IncrementalFilteringMode = DevExpress.Web.ASPxEditors.IncrementalFilteringMode.Contains;
                    comboBoxProperties.FilterMinLength = 0;
                    comboBoxProperties.TextField = "Name";
                    comboBoxProperties.ValueField = "Id";
                    comboBoxProperties.ValueType = typeof(int);
                });
                settings.HtmlRowCreated = (sender, e) =>
                {
                    if (e.RowType == DevExpress.Web.ASPxGridView.GridViewRowType.Data)
                    {
                        e.Row.Attributes.Add("onmouseover", "this.style.backgroundColor='#eeeeee';");
                        e.Row.Attributes.Add("onmouseout", "this.style.backgroundColor='white';");
                    }
                };
               
                settings.ClientSideEvents.BeginCallback = "function(s, e) { OnStartCallback(s, e); }";
                settings.ClientSideEvents.EndCallback = "function(s, e) { OnEndCallback(s, e); }";

            //}).BindToLINQ("", "", new
            //            EventHandler<DevExpress.Data.Linq.LinqServerModeDataSourceSelectEventArgs>((s, e) =>
            //            {
            //                e.KeyExpression = "Id";
            //                DalEf.MDEntitiesEntities context = new DalEf.MDEntitiesEntities();
            //                e.QueryableSource = context.MDEntities_Entity.OfType<DalEf.MDEntities_Product>().Where(p => p.CompanyUsingServiceId == ((BusinessObjects.Security.PTIdentity)Csla.ApplicationContext.User.Identity).CompanyId);
            //            })).GetHtml()
            }).Bind(data).GetHtml()