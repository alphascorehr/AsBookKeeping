@model BusinessObjects.MDEntities.cMDEntities_Service

@{
    ViewBag.Title = "Edit";
    DalEf.MDEntitiesEntities context = new DalEf.MDEntitiesEntities();
}

<script type="text/javascript">
//<![CDATA[
    $.validator.setDefaults({
        submitHandler: function () {
            document.myForm.submit();
        }
    });

    $().ready(function () {
        // validate signup form on keyup and submit
        $("#myForm").validate({
            rules: {
                Name: "required",
                TaxRateId: "required", //{ required: true, number: true, min: 1 },
                UnitId: "required", // {required: true, number: true, min: 1 },
                Label: "required"
            },
            messages: {
                Name: "Molimo unesite naziv",
                TaxRateId: "Molimo unesite poreznu stopu",
                UnitId: "Molimo odaberite mjernu jedinicu",
                Label: "Molimo unesite oznaku"
            }
        });

    });
  // ]]>
</script>

@{
    string caption = "Nova usluga";
    if (Model.Id != null && Model.Id != 0)
    {
        caption = "Usluga: " + Model.Name;
    }
}

@using (Html.BeginForm("CreateAndEdit", "Service", FormMethod.Post, new { id = "myForm", name = "myForm" }))
{
    @Html.HiddenFor(model => model.Id);
    @Html.HiddenFor(model => model.EntityKeyData);

   @Html.Hidden("linkName", "ProizvodiParent")
    @Html.Hidden("linkId", "Proizvod")
    
  
      
    <div id='large-badges'></div><div id='ValSum' style="display:none" class='notifyBox bad'>Please fix these errors. </div>

<div class="clearb"></div>
<div class="clearb"></div>

	<h2 class="button-panel-title">
		<div class="button-panel">
	    </div>
        <span class="title">@caption</span>
	</h2>
	
	<div class="clearb"></div>
	<div class="title-rule"></div>

	<table width="100%" cellspacing="0" cellpadding="0" class="newTable">
	<tr><td colspan='5'></td></tr>
	</table>
    
     <div class="span-23" style="position: relative;">
        <div id="client_section">
               <div class="span-6 required form-layout-left">
			    <label for="customerid" class="no-pointer">Porezna stopa:</label>

		        </div>
		        <div class="span-16 form-layout-right">
                    @Html.DevExpress().ComboBox(settings => { settings.Name = "TaxRateId"; settings.Width = 200;
               settings.Properties.TextField = "Percentage"; settings.Properties.ValueField = "Id"; settings.ShowModelErrors = false; 
                    settings.Properties.IncrementalFilteringMode = IncrementalFilteringMode.StartsWith; settings.Properties.ValueType = typeof(int);
                    settings.Properties.Columns.Add("Percentage", "Postotak", System.Web.UI.WebControls.Unit.Percentage(20));
                    settings.Properties.Columns.Add("Name", "Naziv", System.Web.UI.WebControls.Unit.Percentage(80));
                    settings.Properties.TextFormatString = "{0}";
                    settings.Properties.DisplayFormatString = "{0:n2}";
                    settings.Properties.DropDownWidth = 600;
                     }).BindList(BusinessObjects.MDEntities.cMDEntities_Enums_TaxRate_List.GetcMDEntities_Enums_TaxRate_List(((BusinessObjects.Security.PTIdentity)Csla.ApplicationContext.User.Identity).CompanyId, Model.TaxRateId)).Bind(Model.TaxRateId).GetHtml()
                </div>
        </div>
                   
               
                    <div id="client_section">
		    <div class="span-6 required form-layout-left">
			    <label for="customerid" class="no-pointer">Šifra:</label>

		    </div>
		    <div class="span-16 form-layout-right">
			    @Html.DevExpress().TextBox(settings => { settings.Name = "Label"; settings.Height = 24; settings.Width = 200; settings.ShowModelErrors = false; settings.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithText; settings.Properties.ValidationSettings.ErrorTextPosition = ErrorTextPosition.Bottom; settings.Properties.ValidationSettings.SetFocusOnError = true; settings.Properties.ValidationSettings.ValidateOnLeave = true; }).Bind(Model.Label).GetHtml()
		    </div>
        </div>


                <div class="span-6 required form-layout-left">
			        <label for="customerid" class="no-pointer">Naziv:</label>

		        </div>
		        <div class="span-16 form-layout-right">
                    @Html.DevExpress().TextBox(settings => { settings.Name = "Name"; settings.Height = 24; settings.Width = 200; settings.ShowModelErrors = false; settings.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithText; settings.Properties.ValidationSettings.ErrorTextPosition = ErrorTextPosition.Bottom; settings.Properties.ValidationSettings.SetFocusOnError = true; settings.Properties.ValidationSettings.ValidateOnLeave = true; }).Bind(Model.Name).GetHtml()
                </div>

                <div class="span-6 form-layout-left">
			        <label for="customerid" class="no-pointer">Grupa:</label>
		        </div>
		        <div class="span-16 form-layout-right">
                    @Html.DevExpress().ComboBox(settings =>
                    {
                        settings.Name = "MDEntities_Enums_EntityGroupId";
                        settings.Height = 24;
                        settings.Width = 200;
                        settings.Properties.ValueField = "Id";
                        settings.Properties.TextField = "Name";
                        settings.Properties.ValueType = typeof(int);
                        settings.ShowModelErrors = true;
                        settings.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithText;
                        settings.Properties.ValidationSettings.ErrorTextPosition = ErrorTextPosition.Bottom;
                        settings.Properties.ValidationSettings.SetFocusOnError = true;
                        settings.Properties.ValidationSettings.ValidateOnLeave = true;
                    }).BindList(BusinessObjects.MDEntities.cMDEntities_Enums_EntityGroup_List.GetcMDEntities_Enums_EntityGroup_List(((BusinessObjects.Security.PTIdentity)Csla.ApplicationContext.User.Identity).CompanyId, (Model.MDEntities_Enums_EntityGroupId ?? 0))).Bind(Model.MDEntities_Enums_EntityGroupId).GetHtml()
                </div>

                    <div class="span-6 required form-layout-left">
				        <label for="invoice_number" class="tool-tip"><span title="">Mj. jed.:</span></label>
	                </div>
	                <div class="span-16 form-layout-right">
                        @Html.DevExpress().ComboBox(settings =>
                            {
                                settings.Name = "UnitId";
                                settings.Width = 200;
                                settings.Properties.TextField = "Name";
                                settings.Properties.ValueField = "Id";
                                settings.ShowModelErrors = false;
                                settings.Properties.ValueType = typeof(int);
                                settings.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithText;
                                settings.Properties.ValidationSettings.ErrorTextPosition = ErrorTextPosition.Bottom;
                                settings.Properties.ValidationSettings.SetFocusOnError = true;
                                settings.Properties.ValidationSettings.ValidateOnLeave = true;
                            }).BindList(BusinessObjects.MDEntities.cMDEntities_Enums_Unit_List.GetcMDEntities_Enums_Unit_List(((BusinessObjects.Security.PTIdentity)Csla.ApplicationContext.User.Identity).CompanyId, Model.UnitId)).Bind(Model.UnitId).GetHtml()
                    </div>
                

            </div>

            <div class="span-23">
                     <div class="span-12 form-layout-left">
				        <label for="invoice_number" class="tool-tip"><span title="">Veleprodajna cijena:</span></label>
	                </div>
	                <div class="span-10 form-layout-right">
                        @Html.DevExpress().SpinEdit(settings => { settings.Name = "WholesalePrice"; settings.Properties.DisplayFormatString = "n2"; settings.Properties.MinValue = 0; settings.Properties.MaxValue = 100000; settings.Height = 24; settings.Width = 200; settings.ShowModelErrors = false; settings.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithText; settings.Properties.ValidationSettings.ErrorTextPosition = ErrorTextPosition.Bottom; settings.Properties.ValidationSettings.SetFocusOnError = true; settings.Properties.ValidationSettings.ValidateOnLeave = true; }).Bind(Model.WholesalePrice).GetHtml()
                    </div>

                    <div class="span-12 form-layout-left">
				        <label for="invoice_number" class="tool-tip"><span title="">Cijena po mjesecu:</span></label>
	                </div>
	                <div class="span-10 form-layout-right">
                        @Html.DevExpress().SpinEdit(settings => { settings.Name = "WholesaleTaskRatePerMonth"; settings.Properties.DisplayFormatString = "n2"; settings.Height = 24; settings.Width = 200; settings.Properties.MinValue = 0; settings.Properties.MaxValue = 9999999999; settings.ShowModelErrors = false; settings.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithText; settings.Properties.ValidationSettings.ErrorTextPosition = ErrorTextPosition.Bottom; settings.Properties.ValidationSettings.SetFocusOnError = true; settings.Properties.ValidationSettings.ValidateOnLeave = true; }).Bind(Model.WholesaleTaskRatePerMonth).GetHtml()
                    </div>
   
                    <div class="span-12 form-layout-left">
				        <label for="invoice_number" class="tool-tip"><span title="">Cijena po danu:</span></label>
	                </div>
	                <div class="span-10 form-layout-right">
                            @Html.DevExpress().SpinEdit(settings => { settings.Name = "WholesaleTaskRatePerDay"; settings.Properties.DisplayFormatString = "n2"; settings.Height = 24; settings.Width = 200; settings.Properties.MinValue = 0; settings.Properties.MaxValue = 9999999999; settings.ShowModelErrors = false; settings.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithText; settings.Properties.ValidationSettings.ErrorTextPosition = ErrorTextPosition.Bottom; settings.Properties.ValidationSettings.SetFocusOnError = true; settings.Properties.ValidationSettings.ValidateOnLeave = true; }).Bind(Model.WholesaleTaskRatePerDay).GetHtml()
                    </div>


                      <div class="span-12 form-layout-left">
				        <label for="invoice_number" class="tool-tip"><span title="">Cijena po satu:</span></label>
	                </div>
	                <div class="span-10 form-layout-right">
                            @Html.DevExpress().SpinEdit(settings => { settings.Name = "WholesaleTaskRatePerHour"; settings.Properties.DisplayFormatString = "n2"; settings.Height = 24; settings.Width = 200; settings.Properties.MinValue = 0; settings.Properties.MaxValue = 9999999999; settings.ShowModelErrors = false; settings.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithText; settings.Properties.ValidationSettings.ErrorTextPosition = ErrorTextPosition.Bottom; settings.Properties.ValidationSettings.SetFocusOnError = true; settings.Properties.ValidationSettings.ValidateOnLeave = true; }).Bind(Model.WholesaleTaskRatePerHour).GetHtml()
                     </div>
            </div>
    
             
            
            <div class="clearb"></div>
            <div class="append-bottom-1 form-layout">
	            <div class="span-20 append-4 append-bottom-1 iefix-2">
                    <label for="terms">Opis:</label>
                    @Html.DevExpress().Memo(settings => { settings.Name = "Description"; settings.Height = 60; settings.Width = 440; settings.ShowModelErrors = false; settings.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithText; settings.Properties.ValidationSettings.ErrorTextPosition = ErrorTextPosition.Bottom; settings.Properties.ValidationSettings.SetFocusOnError = true; settings.Properties.ValidationSettings.ValidateOnLeave = true; }).Bind(Model.Description).GetHtml()
                </div>
                <div class="span-14 append-bottom-1">
                    <label for="terms">Tag:</label>
                    @Html.DevExpress().Memo(settings => { settings.Name = "Tag"; settings.Height = 60; settings.Width = 445; settings.ShowModelErrors = false; settings.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithText; settings.Properties.ValidationSettings.ErrorTextPosition = ErrorTextPosition.Bottom; settings.Properties.ValidationSettings.SetFocusOnError = true; settings.Properties.ValidationSettings.ValidateOnLeave = true; }).Bind(Model.Tag).GetHtml()
                </div>

            </div>

  <div class="clearb"></div>
             <div class="clearb"></div>
                <div class="clearb"></div>
              <div class="span-40 append-1">
        <div class="span-10 append-1"></div>
        <div class="span-10 append-1">
                <a href="#" class="button_large launch-invitepop-invoice " onclick="$(this).closest('form').submit()">
                <span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Snimi&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></a>
        </div>
        <div class="span-2 append-1"></div>
        <div class="span-10 append-1">
                <a href="@Url.Content("~/MDEntities/Service/Odustani")" class="button_large2 launch-invitepop-invoice ">
                <span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Odustani&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></a>
        </div>
        <div class="span-8 append-1"></div>
    </div>
    
    
    
    
    
   
             
                                   
}
