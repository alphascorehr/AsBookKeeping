@using System.Data
@using System.Text.RegularExpressions;


@if (System.Web.HttpContext.Current.Session["CashBoxCodes"] != null)
{

    string cashboxCodes = System.Web.HttpContext.Current.Session["CashBoxCodes"].ToString(); // locationCode / blagajnaCode
    string locationCode = Regex.Split(cashboxCodes, "/")[0];
    string cashBoxCode = Regex.Split(cashboxCodes, "/")[1];

    DalEf.DocumentsEntities context = new DalEf.DocumentsEntities();
    var data = context.vInvoice.OrderByDescending(p => p.Id).Where(p => p.CompanyUsingServiceId == ((BusinessObjects.Security.PTIdentity)Csla.ApplicationContext.User.Identity).CompanyId && p.CashBoxCode == cashBoxCode);


@Html.DevExpress().GridView(
        settings =>
            {
                settings.Name = "gvInvoiceRateGrid";
                settings.CallbackRouteValues = new { Controller = "Invoice", Action = "InvoiceGridPartial" };
                settings.SettingsLoadingPanel.Text = "Učitavanje";

                settings.SettingsPager.Summary.Text = "Stranica {0} od {1} ({2} reda)";
                settings.SettingsText.EmptyDataRow = "Nema podataka";
                settings.Width = System.Web.UI.WebControls.Unit.Percentage(100);

                settings.Settings.ShowFilterRow = true;
                settings.Settings.ShowFilterRowMenu = true;
                settings.Settings.ShowGroupPanel = true;
                settings.SettingsPager.PageSize = 17;
                //settings.CommandColumn.Visible = true;
                //settings.CommandColumn.ButtonType = System.Web.UI.WebControls.ButtonType.Image;
                //settings.CommandColumn.ClearFilterButton.Image.Url = @Url.Content("~/Content/images/clear.png");
                //settings.CommandColumn.ClearFilterButton.Image.ToolTip = "Očisti rezultate pretrage";
                //settings.CommandColumn.ClearFilterButton.Visible = true;
                //settings.CommandColumn.ClearFilterButton.Text = "Očisti";
                settings.Settings.ShowFilterBar = GridViewStatusBarMode.Auto;
                settings.Settings.ShowHeaderFilterButton = true;
                settings.SettingsPopup.HeaderFilter.Height = 200;
                settings.SettingsText.HeaderFilterOkButton = "Ok";
                settings.SettingsText.HeaderFilterCancelButton = "Odustani";
                settings.SettingsText.HeaderFilterSelectAll = "Označi sve";

                settings.KeyFieldName = "Id";
                
                settings.Columns.Add(column =>
                {
                    column.FieldName = "UniqueIdentifier";
                    column.Caption = "Broj Računa";
                    column.Width = 90;
                    column.SetDataItemTemplateContent(c =>
                    {
                        ViewContext.Writer.Write(
                            "<a onclick=\"Cursor();\" href=" + @Url.Content("~/Documents/Invoice/CreateAndEdit/" + DataBinder.Eval(c.DataItem, "Id")) + ">" + DataBinder.Eval(c.DataItem, "UniqueIdentifier") + "</a>"
                        );
                    });

                });
                //settings.Columns.Add("Name", "Klijent", DevExpress.Web.Mvc.MVCxGridViewColumnType.TextBox);
                settings.Columns.Add(column =>
                {
                    column.FieldName = "Name";
                    column.Caption = "Kupac";
                    column.Width = 280;
                    column.ColumnType = DevExpress.Web.Mvc.MVCxGridViewColumnType.TextBox;
                });
                
                //settings.Columns.Add("DocumentDateTime", "Datum računa", DevExpress.Web.Mvc.MVCxGridViewColumnType.DateEdit);
                settings.Columns.Add(column =>
                {
                    column.FieldName = "DocumentDateTime";
                    column.Caption = "Datum";
                    column.Width = 95;
                    column.ColumnType = DevExpress.Web.Mvc.MVCxGridViewColumnType.DateEdit;
                    column.CellStyle.HorizontalAlign = System.Web.UI.WebControls.HorizontalAlign.Center;
                    var dateEditproperties = column.PropertiesEdit as DateEditProperties;
                    dateEditproperties.DisplayFormatString = "dd.MM.yyyy";
                    
                });
                
                //settings.Columns.Add("MaturityDate", "Datum dospjeća", DevExpress.Web.Mvc.MVCxGridViewColumnType.DateEdit);
                settings.Columns.Add(column =>
                {
                    column.FieldName = "MaturityDate";
                    column.Caption = "Valuta";
                    column.Width = 95;
                    column.ColumnType = DevExpress.Web.Mvc.MVCxGridViewColumnType.DateEdit;
                    column.CellStyle.HorizontalAlign = System.Web.UI.WebControls.HorizontalAlign.Center;
                    var dateEditproperties = column.PropertiesEdit as DateEditProperties;
                    dateEditproperties.DisplayFormatString = "dd.MM.yyyy";
                    
                });
                
                //settings.Columns.Add("RetailValue", "Iznos", DevExpress.Web.Mvc.MVCxGridViewColumnType.SpinEdit);
                settings.Columns.Add(column =>
                {
                    column.FieldName = "RetailValue";
                    column.Caption = "Iznos";
                    column.ColumnType = MVCxGridViewColumnType.SpinEdit;
                    var spinEditproperties = column.PropertiesEdit as SpinEditProperties;
                    spinEditproperties.DisplayFormatString = "c";
                    column.Width = 110;
                });
                //settings.Columns.Add("", "Status", DevExpress.Web.Mvc.MVCxGridViewColumnType.TextBox);

                settings.Columns.Add(column =>
                {
                    column.Caption = "Status";
                    column.FieldName = "Statustext";
                    column.ColumnType = MVCxGridViewColumnType.HyperLink;
                    column.Settings.HeaderFilterMode = HeaderFilterMode.CheckedList;
                    column.CellStyle.HorizontalAlign = System.Web.UI.WebControls.HorizontalAlign.Center;
                    var props = column.PropertiesEdit as HyperLinkProperties;


                    props.EnableClientSideAPI = true;
                    props.Target = "#";

                    column.SetDataItemTemplateContent(c =>
                    {
                        ViewContext.Writer.Write(
                            "<a href=\"#\" onclick=\"ShowHideRadio(" + "'" + DataBinder.Eval(c.DataItem, "Id") + "'" + "," + "'" + DataBinder.Eval(c.DataItem, "Status") + "'" + ")\">" + DataBinder.Eval(c.DataItem, "Statustext") + "</a>"

                        );
                    });
                });


                settings.HeaderFilterFillItems = (sender, e) =>
                {
                    ASPxGridView grid = (ASPxGridView)sender;
                    if (e.Column.FieldName == "Statustext")
                    {
                        e.Values.Clear();

                        e.AddValue("Otvoren", string.Empty, "[Statustext] == 'Otvoren'");
                        e.AddValue("Poslan", string.Empty, "[Statustext] == 'Poslan'");
                        e.AddValue("Odbijen", string.Empty, "[Statustext] == 'Odbijen'");
                        e.AddValue("Zatvoren", string.Empty, "[Statustext] == 'Zatvoren'");
                        e.AddValue("Obrisan", string.Empty, "[Statustext] == 'Obrisan'");
                    }
                };
                
                settings.Columns.Add(column =>
                {
                    column.Caption = "";
                    column.SetDataItemTemplateContent(c =>
                    {
                        ViewContext.Writer.Write(
                             "<a href=\"#\" onclick=\"Print(" + DataBinder.Eval(c.DataItem, "Id") + ")\">Ispiši</a>"
                         );
                    });
                    column.Settings.AllowDragDrop = DevExpress.Utils.DefaultBoolean.False;
                    column.Settings.AllowSort = DevExpress.Utils.DefaultBoolean.False;
                    column.Width = 40;
                });

                settings.Columns.Add(column =>
                {
                    column.Caption = "";
                    column.CellStyle.HorizontalAlign = System.Web.UI.WebControls.HorizontalAlign.Center;
                    column.SetDataItemTemplateContent(c =>
                    {
                        ViewContext.Writer.Write(
                               "<a href=\"#\" onclick=\"Delete(" + DataBinder.Eval(c.DataItem, "Id") + ")\" class=\"gridDelButton\"></a>"
                        );
                    });
                    column.Settings.AllowDragDrop = DevExpress.Utils.DefaultBoolean.False;
                    column.Settings.AllowSort = DevExpress.Utils.DefaultBoolean.False;
                    column.Width = 20;
                });

                settings.Columns.Add("FiscalizationJIR", "F", MVCxGridViewColumnType.TextBox);
                settings.HtmlDataCellPrepared = (sender, e) =>
                {
                    //MVCxGridView gridView = (MVCxGridView)sender;
                    //GridViewDataColumn column = gridView.Columns[2] as GridViewDataColumn;
                    if (e.DataColumn.Caption == "F")
                    {
                        e.Cell.Font.Bold = true;
                        if (e.CellValue == null)
                        {
                            e.Cell.Text = "Ne";
                            e.Cell.ForeColor = System.Drawing.Color.DarkRed;
                        }
                        else
                        {
                            e.Cell.Text = "Da";
                            e.Cell.ForeColor = System.Drawing.Color.Green;
                        }
                    }
                }; 
                
                settings.HtmlRowCreated = (sender, e) =>
                {
                    if (e.RowType == DevExpress.Web.ASPxGridView.GridViewRowType.Data)
                    {
                        e.Row.Attributes.Add("onmouseover", "this.style.backgroundColor='#eeeeee';");
                        e.Row.Attributes.Add("onmouseout", "this.style.backgroundColor='white';");
                    }
                };
                
                settings.ClientSideEvents.BeginCallback = "function(s, e) { OnStartCallback(s, e); }";
                settings.ClientSideEvents.EndCallback = "function(s, e) { OnEndCallback(s, e); }";

            //}).BindToLINQ("", "", new
            //            EventHandler<DevExpress.Data.Linq.LinqServerModeDataSourceSelectEventArgs>((s, e) =>
            //            {
            //                e.KeyExpression = "Id";
            //                DalEf.DocumentsEntities context = new DalEf.DocumentsEntities();
            //                e.QueryableSource = context.vInvoice
            //                .Where(p => p.CompanyUsingServiceId == ((BusinessObjects.Security.PTIdentity)Csla.ApplicationContext.User.Identity).CompanyId);
            //            })).GetHtml()
            }).Bind(data).GetHtml()

}    
else
{
    
    @Html.DevExpress().GridView(
        settings =>
            {
                settings.Name = "gvInvoiceRateGrid";
                settings.CallbackRouteValues = new { Controller = "Invoice", Action = "InvoiceGridPartial" };
                settings.SettingsLoadingPanel.Text = "Učitavanje";

                settings.SettingsPager.Summary.Text = "Stranica {0} od {1} ({2} reda)";
                settings.SettingsText.EmptyDataRow = "Nema podataka";
                settings.Width = System.Web.UI.WebControls.Unit.Percentage(100);

                settings.Settings.ShowFilterRow = true;
                settings.Settings.ShowFilterRowMenu = true;
                settings.Settings.ShowGroupPanel = true;
                settings.SettingsPager.PageSize = 17;
                settings.Settings.ShowFilterBar = GridViewStatusBarMode.Auto;
                settings.Settings.ShowHeaderFilterButton = true;
                settings.SettingsPopup.HeaderFilter.Height = 200;
                settings.SettingsText.HeaderFilterOkButton = "Ok";
                settings.SettingsText.HeaderFilterCancelButton = "Odustani";
                settings.SettingsText.HeaderFilterSelectAll = "Označi sve";

                settings.KeyFieldName = "Id";
                
                settings.Columns.Add(column =>
                {
                    column.Caption = "Broj Računa";
                });
                settings.Columns.Add(column =>
                {
                    column.Caption = "Kupac";
                });
                settings.Columns.Add(column =>
                {
                    column.Caption = "Datum";
                });
                settings.Columns.Add(column =>
                {
                    column.Caption = "Valuta";
                });
                settings.Columns.Add(column =>
                {
                    column.Caption = "Iznos";
                });
                settings.Columns.Add(column =>
                {
                    column.Caption = "Status";
                });
            }).GetHtml()
}