@model AlphaWebCommodityBookkeeping.Models.ChangePasswordModel  

@{
    ViewBag.Title = "Change password";
}

<script type="text/javascript">
//<![CDATA[
    $.validator.setDefaults({
        submitHandler: function () {
            myForm.submit();
            //alert("OK");
        }
    });

    $().ready(function () {
        // validate signup form on keyup and submit
        $("#myForm").validate({
            rules: {
                OldPassword: "required",
                NewPassword: "required",
                ConfirmPassword: "required"
            },
            messages: {
                OldPassword: "Molimo unesite lozinku",
                NewPassword: "Molimo unesite lozinku",
                ConfirmPassword: "Molimo unesite lozinku"
            }
        });

    });
  // ]]>
</script>

@using (Html.BeginForm("ChangePassword", "Account", FormMethod.Post, new { id = "myForm" }))
{
    <div id="kzlist">
        <div id="kzlisttop"></div>
        <div id="kzlistmiddle">
             
            <div style="text-align:center; width:800px; height: 350px;margin-bottom:95px">
                <fieldset class="font"  style="margin-left: 315px; width:300px;margin-top: 60px;">
                        <legend>promjena lozinke</legend>
                         <div class="textfieldslablom" style="padding: 3px;margin-bottom: 13px;width: 270px;margin-top:8px; margin-left:8px">
                    <div class="editor-label">Stara lozinka:</div>
                        <div class="editor-field">
                        @Html.DevExpress().TextBox(settings => { settings.Name = "OldPassword"; settings.Height = 24; settings.Width = 168; settings.ShowModelErrors = true; settings.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithText; settings.Properties.ValidationSettings.ErrorTextPosition = ErrorTextPosition.Bottom; settings.Properties.ValidationSettings.SetFocusOnError = true; settings.Properties.ValidationSettings.ValidateOnLeave = true; }).Bind(Model.OldPassword).GetHtml()
                        
                        </div>
                 </div>
                 <div class="textfieldslablom" style="padding: 3px;margin-bottom: 13px;width: 270px;margin-top:8px; margin-left:8px">
                    <div class="editor-label">Nova lozinka:</div>
                        <div class="editor-field">
                        @Html.DevExpress().TextBox(settings => { settings.Name = "NewPassword"; settings.Height = 24; settings.Width = 168; settings.ShowModelErrors = true; settings.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithText; settings.Properties.ValidationSettings.ErrorTextPosition = ErrorTextPosition.Bottom; settings.Properties.ValidationSettings.SetFocusOnError = true; settings.Properties.ValidationSettings.ValidateOnLeave = true; }).Bind(Model.NewPassword).GetHtml()
                        
                        </div>
                 </div>
                 <div class="textfieldslablom" style="padding: 3px;margin-bottom: 13px;width: 270px;margin-top:8px; margin-left:8px">
                    <div class="editor-label">Ponovite novu lozinku:</div>
                        <div class="editor-field">
                        @Html.DevExpress().TextBox(settings => { settings.Name = "ConfirmPassword"; settings.Height = 24; settings.Width = 168; settings.ShowModelErrors = true; settings.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithText; settings.Properties.ValidationSettings.ErrorTextPosition = ErrorTextPosition.Bottom; settings.Properties.ValidationSettings.SetFocusOnError = true; settings.Properties.ValidationSettings.ValidateOnLeave = true; }).Bind(Model.ConfirmPassword).GetHtml()
                        
                        </div>
                 </div>
                
                
                <div style=" float:left">
                         @Html.DevExpress().Button(settings =>
                    {

                        settings.Name = "btnSnimi";
                        settings.EnableClientSideAPI = true;
                        settings.EnableTheming = false;
                        settings.AllowFocus = false;
                        settings.Text = "Snimi";
                        settings.UseSubmitBehavior = true;
                    }).GetHtml()
                </div>

                      <div style=" float:left; margin-left:10px ">
                            @Html.DevExpress().Button(settings =>
                       {

                           settings.Name = "btnOdustani";
                           settings.EnableClientSideAPI = true;
                           settings.EnableTheming = false;
                           settings.AllowFocus = false;
                           settings.Text = "Odustani";
                           settings.UseSubmitBehavior = false;
                           settings.RouteValues = new { Controller = "Home", Action = "Index" };
                       }).GetHtml()
                </div>
                </fieldset>
        
            </div>
        </div>
        <div id="kzlistbottom"></div>
    </div>
}




