//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
namespace DalEf
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class MDPlacesEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new MDPlacesEntities object using the connection string found in the 'MDPlacesEntities' section of the application configuration file.
        /// </summary>
        public MDPlacesEntities() : base("name=MDPlacesEntities", "MDPlacesEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new MDPlacesEntities object.
        /// </summary>
        public MDPlacesEntities(string connectionString) : base(connectionString, "MDPlacesEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new MDPlacesEntities object.
        /// </summary>
        public MDPlacesEntities(EntityConnection connection) : base(connection, "MDPlacesEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MDPlaces_Enums_Geo_Country> MDPlaces_Enums_Geo_Country
        {
            get
            {
                if ((_MDPlaces_Enums_Geo_Country == null))
                {
                    _MDPlaces_Enums_Geo_Country = base.CreateObjectSet<MDPlaces_Enums_Geo_Country>("MDPlaces_Enums_Geo_Country");
                }
                return _MDPlaces_Enums_Geo_Country;
            }
        }
        private ObjectSet<MDPlaces_Enums_Geo_Country> _MDPlaces_Enums_Geo_Country;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MDPlaces_Enums_Geo_Place> MDPlaces_Enums_Geo_Place
        {
            get
            {
                if ((_MDPlaces_Enums_Geo_Place == null))
                {
                    _MDPlaces_Enums_Geo_Place = base.CreateObjectSet<MDPlaces_Enums_Geo_Place>("MDPlaces_Enums_Geo_Place");
                }
                return _MDPlaces_Enums_Geo_Place;
            }
        }
        private ObjectSet<MDPlaces_Enums_Geo_Place> _MDPlaces_Enums_Geo_Place;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MDPlaces_Enums_Geo_Region> MDPlaces_Enums_Geo_Region
        {
            get
            {
                if ((_MDPlaces_Enums_Geo_Region == null))
                {
                    _MDPlaces_Enums_Geo_Region = base.CreateObjectSet<MDPlaces_Enums_Geo_Region>("MDPlaces_Enums_Geo_Region");
                }
                return _MDPlaces_Enums_Geo_Region;
            }
        }
        private ObjectSet<MDPlaces_Enums_Geo_Region> _MDPlaces_Enums_Geo_Region;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MDPlaces_Enums_OgranizationalUnit> MDPlaces_Enums_OgranizationalUnit
        {
            get
            {
                if ((_MDPlaces_Enums_OgranizationalUnit == null))
                {
                    _MDPlaces_Enums_OgranizationalUnit = base.CreateObjectSet<MDPlaces_Enums_OgranizationalUnit>("MDPlaces_Enums_OgranizationalUnit");
                }
                return _MDPlaces_Enums_OgranizationalUnit;
            }
        }
        private ObjectSet<MDPlaces_Enums_OgranizationalUnit> _MDPlaces_Enums_OgranizationalUnit;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<vEnums_Geo_Country> vEnums_Geo_Country
        {
            get
            {
                if ((_vEnums_Geo_Country == null))
                {
                    _vEnums_Geo_Country = base.CreateObjectSet<vEnums_Geo_Country>("vEnums_Geo_Country");
                }
                return _vEnums_Geo_Country;
            }
        }
        private ObjectSet<vEnums_Geo_Country> _vEnums_Geo_Country;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<vEnums_Geo_Place> vEnums_Geo_Place
        {
            get
            {
                if ((_vEnums_Geo_Place == null))
                {
                    _vEnums_Geo_Place = base.CreateObjectSet<vEnums_Geo_Place>("vEnums_Geo_Place");
                }
                return _vEnums_Geo_Place;
            }
        }
        private ObjectSet<vEnums_Geo_Place> _vEnums_Geo_Place;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<vEnums_Geo_Region> vEnums_Geo_Region
        {
            get
            {
                if ((_vEnums_Geo_Region == null))
                {
                    _vEnums_Geo_Region = base.CreateObjectSet<vEnums_Geo_Region>("vEnums_Geo_Region");
                }
                return _vEnums_Geo_Region;
            }
        }
        private ObjectSet<vEnums_Geo_Region> _vEnums_Geo_Region;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MDPlaces_Enums_Geo_Country EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMDPlaces_Enums_Geo_Country(MDPlaces_Enums_Geo_Country mDPlaces_Enums_Geo_Country)
        {
            base.AddObject("MDPlaces_Enums_Geo_Country", mDPlaces_Enums_Geo_Country);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MDPlaces_Enums_Geo_Place EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMDPlaces_Enums_Geo_Place(MDPlaces_Enums_Geo_Place mDPlaces_Enums_Geo_Place)
        {
            base.AddObject("MDPlaces_Enums_Geo_Place", mDPlaces_Enums_Geo_Place);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MDPlaces_Enums_Geo_Region EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMDPlaces_Enums_Geo_Region(MDPlaces_Enums_Geo_Region mDPlaces_Enums_Geo_Region)
        {
            base.AddObject("MDPlaces_Enums_Geo_Region", mDPlaces_Enums_Geo_Region);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MDPlaces_Enums_OgranizationalUnit EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMDPlaces_Enums_OgranizationalUnit(MDPlaces_Enums_OgranizationalUnit mDPlaces_Enums_OgranizationalUnit)
        {
            base.AddObject("MDPlaces_Enums_OgranizationalUnit", mDPlaces_Enums_OgranizationalUnit);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the vEnums_Geo_Country EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTovEnums_Geo_Country(vEnums_Geo_Country vEnums_Geo_Country)
        {
            base.AddObject("vEnums_Geo_Country", vEnums_Geo_Country);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the vEnums_Geo_Place EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTovEnums_Geo_Place(vEnums_Geo_Place vEnums_Geo_Place)
        {
            base.AddObject("vEnums_Geo_Place", vEnums_Geo_Place);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the vEnums_Geo_Region EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTovEnums_Geo_Region(vEnums_Geo_Region vEnums_Geo_Region)
        {
            base.AddObject("vEnums_Geo_Region", vEnums_Geo_Region);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MDPlacesModel", Name="MDPlaces_Enums_Geo_Country")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MDPlaces_Enums_Geo_Country : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MDPlaces_Enums_Geo_Country object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="label">Initial value of the Label property.</param>
        /// <param name="lastChanged">Initial value of the LastChanged property.</param>
        public static MDPlaces_Enums_Geo_Country CreateMDPlaces_Enums_Geo_Country(global::System.Int32 id, global::System.String name, global::System.String label, global::System.Byte[] lastChanged)
        {
            MDPlaces_Enums_Geo_Country mDPlaces_Enums_Geo_Country = new MDPlaces_Enums_Geo_Country();
            mDPlaces_Enums_Geo_Country.Id = id;
            mDPlaces_Enums_Geo_Country.Name = name;
            mDPlaces_Enums_Geo_Country.Label = label;
            mDPlaces_Enums_Geo_Country.LastChanged = lastChanged;
            return mDPlaces_Enums_Geo_Country;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Label
        {
            get
            {
                return _Label;
            }
            set
            {
                OnLabelChanging(value);
                ReportPropertyChanging("Label");
                _Label = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Label");
                OnLabelChanged();
            }
        }
        private global::System.String _Label;
        partial void OnLabelChanging(global::System.String value);
        partial void OnLabelChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> LanguageId
        {
            get
            {
                return _LanguageId;
            }
            set
            {
                OnLanguageIdChanging(value);
                ReportPropertyChanging("LanguageId");
                _LanguageId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LanguageId");
                OnLanguageIdChanged();
            }
        }
        private Nullable<global::System.Int32> _LanguageId;
        partial void OnLanguageIdChanging(Nullable<global::System.Int32> value);
        partial void OnLanguageIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CurrencyId
        {
            get
            {
                return _CurrencyId;
            }
            set
            {
                OnCurrencyIdChanging(value);
                ReportPropertyChanging("CurrencyId");
                _CurrencyId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CurrencyId");
                OnCurrencyIdChanged();
            }
        }
        private Nullable<global::System.Int32> _CurrencyId;
        partial void OnCurrencyIdChanging(Nullable<global::System.Int32> value);
        partial void OnCurrencyIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] LastChanged
        {
            get
            {
                return StructuralObject.GetValidValue(_LastChanged);
            }
            set
            {
                OnLastChangedChanging(value);
                ReportPropertyChanging("LastChanged");
                _LastChanged = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LastChanged");
                OnLastChangedChanged();
            }
        }
        private global::System.Byte[] _LastChanged;
        partial void OnLastChangedChanging(global::System.Byte[] value);
        partial void OnLastChangedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CompanyUsingServiceId
        {
            get
            {
                return _CompanyUsingServiceId;
            }
            set
            {
                OnCompanyUsingServiceIdChanging(value);
                ReportPropertyChanging("CompanyUsingServiceId");
                _CompanyUsingServiceId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CompanyUsingServiceId");
                OnCompanyUsingServiceIdChanged();
            }
        }
        private Nullable<global::System.Int32> _CompanyUsingServiceId;
        partial void OnCompanyUsingServiceIdChanging(Nullable<global::System.Int32> value);
        partial void OnCompanyUsingServiceIdChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MDPlacesModel", Name="MDPlaces_Enums_Geo_Place")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MDPlaces_Enums_Geo_Place : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MDPlaces_Enums_Geo_Place object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="zIPCode">Initial value of the ZIPCode property.</param>
        /// <param name="lastChanged">Initial value of the LastChanged property.</param>
        public static MDPlaces_Enums_Geo_Place CreateMDPlaces_Enums_Geo_Place(global::System.Int32 id, global::System.String name, global::System.String zIPCode, global::System.Byte[] lastChanged)
        {
            MDPlaces_Enums_Geo_Place mDPlaces_Enums_Geo_Place = new MDPlaces_Enums_Geo_Place();
            mDPlaces_Enums_Geo_Place.Id = id;
            mDPlaces_Enums_Geo_Place.Name = name;
            mDPlaces_Enums_Geo_Place.ZIPCode = zIPCode;
            mDPlaces_Enums_Geo_Place.LastChanged = lastChanged;
            return mDPlaces_Enums_Geo_Place;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ZIPCode
        {
            get
            {
                return _ZIPCode;
            }
            set
            {
                OnZIPCodeChanging(value);
                ReportPropertyChanging("ZIPCode");
                _ZIPCode = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ZIPCode");
                OnZIPCodeChanged();
            }
        }
        private global::System.String _ZIPCode;
        partial void OnZIPCodeChanging(global::System.String value);
        partial void OnZIPCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> RegionId
        {
            get
            {
                return _RegionId;
            }
            set
            {
                OnRegionIdChanging(value);
                ReportPropertyChanging("RegionId");
                _RegionId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RegionId");
                OnRegionIdChanged();
            }
        }
        private Nullable<global::System.Int32> _RegionId;
        partial void OnRegionIdChanging(Nullable<global::System.Int32> value);
        partial void OnRegionIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Distance
        {
            get
            {
                return _Distance;
            }
            set
            {
                OnDistanceChanging(value);
                ReportPropertyChanging("Distance");
                _Distance = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Distance");
                OnDistanceChanged();
            }
        }
        private Nullable<global::System.Int32> _Distance;
        partial void OnDistanceChanging(Nullable<global::System.Int32> value);
        partial void OnDistanceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] LastChanged
        {
            get
            {
                return StructuralObject.GetValidValue(_LastChanged);
            }
            set
            {
                OnLastChangedChanging(value);
                ReportPropertyChanging("LastChanged");
                _LastChanged = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LastChanged");
                OnLastChangedChanged();
            }
        }
        private global::System.Byte[] _LastChanged;
        partial void OnLastChangedChanging(global::System.Byte[] value);
        partial void OnLastChangedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CompanyUsingServiceId
        {
            get
            {
                return _CompanyUsingServiceId;
            }
            set
            {
                OnCompanyUsingServiceIdChanging(value);
                ReportPropertyChanging("CompanyUsingServiceId");
                _CompanyUsingServiceId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CompanyUsingServiceId");
                OnCompanyUsingServiceIdChanged();
            }
        }
        private Nullable<global::System.Int32> _CompanyUsingServiceId;
        partial void OnCompanyUsingServiceIdChanging(Nullable<global::System.Int32> value);
        partial void OnCompanyUsingServiceIdChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MDPlacesModel", Name="MDPlaces_Enums_Geo_Region")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MDPlaces_Enums_Geo_Region : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MDPlaces_Enums_Geo_Region object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="countryId">Initial value of the CountryId property.</param>
        /// <param name="lastChanged">Initial value of the LastChanged property.</param>
        public static MDPlaces_Enums_Geo_Region CreateMDPlaces_Enums_Geo_Region(global::System.Int32 id, global::System.String name, global::System.Int32 countryId, global::System.Byte[] lastChanged)
        {
            MDPlaces_Enums_Geo_Region mDPlaces_Enums_Geo_Region = new MDPlaces_Enums_Geo_Region();
            mDPlaces_Enums_Geo_Region.Id = id;
            mDPlaces_Enums_Geo_Region.Name = name;
            mDPlaces_Enums_Geo_Region.CountryId = countryId;
            mDPlaces_Enums_Geo_Region.LastChanged = lastChanged;
            return mDPlaces_Enums_Geo_Region;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CountryId
        {
            get
            {
                return _CountryId;
            }
            set
            {
                OnCountryIdChanging(value);
                ReportPropertyChanging("CountryId");
                _CountryId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CountryId");
                OnCountryIdChanged();
            }
        }
        private global::System.Int32 _CountryId;
        partial void OnCountryIdChanging(global::System.Int32 value);
        partial void OnCountryIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] LastChanged
        {
            get
            {
                return StructuralObject.GetValidValue(_LastChanged);
            }
            set
            {
                OnLastChangedChanging(value);
                ReportPropertyChanging("LastChanged");
                _LastChanged = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LastChanged");
                OnLastChangedChanged();
            }
        }
        private global::System.Byte[] _LastChanged;
        partial void OnLastChangedChanging(global::System.Byte[] value);
        partial void OnLastChangedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CompanyUsingServiceId
        {
            get
            {
                return _CompanyUsingServiceId;
            }
            set
            {
                OnCompanyUsingServiceIdChanging(value);
                ReportPropertyChanging("CompanyUsingServiceId");
                _CompanyUsingServiceId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CompanyUsingServiceId");
                OnCompanyUsingServiceIdChanged();
            }
        }
        private Nullable<global::System.Int32> _CompanyUsingServiceId;
        partial void OnCompanyUsingServiceIdChanging(Nullable<global::System.Int32> value);
        partial void OnCompanyUsingServiceIdChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MDPlacesModel", Name="MDPlaces_Enums_OgranizationalUnit")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MDPlaces_Enums_OgranizationalUnit : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MDPlaces_Enums_OgranizationalUnit object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="companyUsingServiceId">Initial value of the CompanyUsingServiceId property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="inactive">Initial value of the Inactive property.</param>
        /// <param name="lastActivityDate">Initial value of the LastActivityDate property.</param>
        /// <param name="userWhoLastChanedItUserId">Initial value of the UserWhoLastChanedItUserId property.</param>
        /// <param name="lastChanged">Initial value of the LastChanged property.</param>
        public static MDPlaces_Enums_OgranizationalUnit CreateMDPlaces_Enums_OgranizationalUnit(global::System.Int32 id, global::System.Int32 companyUsingServiceId, global::System.String name, global::System.Boolean inactive, global::System.DateTime lastActivityDate, global::System.Int32 userWhoLastChanedItUserId, global::System.Byte[] lastChanged)
        {
            MDPlaces_Enums_OgranizationalUnit mDPlaces_Enums_OgranizationalUnit = new MDPlaces_Enums_OgranizationalUnit();
            mDPlaces_Enums_OgranizationalUnit.Id = id;
            mDPlaces_Enums_OgranizationalUnit.CompanyUsingServiceId = companyUsingServiceId;
            mDPlaces_Enums_OgranizationalUnit.Name = name;
            mDPlaces_Enums_OgranizationalUnit.Inactive = inactive;
            mDPlaces_Enums_OgranizationalUnit.LastActivityDate = lastActivityDate;
            mDPlaces_Enums_OgranizationalUnit.UserWhoLastChanedItUserId = userWhoLastChanedItUserId;
            mDPlaces_Enums_OgranizationalUnit.LastChanged = lastChanged;
            return mDPlaces_Enums_OgranizationalUnit;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CompanyUsingServiceId
        {
            get
            {
                return _CompanyUsingServiceId;
            }
            set
            {
                OnCompanyUsingServiceIdChanging(value);
                ReportPropertyChanging("CompanyUsingServiceId");
                _CompanyUsingServiceId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CompanyUsingServiceId");
                OnCompanyUsingServiceIdChanged();
            }
        }
        private global::System.Int32 _CompanyUsingServiceId;
        partial void OnCompanyUsingServiceIdChanging(global::System.Int32 value);
        partial void OnCompanyUsingServiceIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Label
        {
            get
            {
                return _Label;
            }
            set
            {
                OnLabelChanging(value);
                ReportPropertyChanging("Label");
                _Label = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Label");
                OnLabelChanged();
            }
        }
        private global::System.String _Label;
        partial void OnLabelChanging(global::System.String value);
        partial void OnLabelChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Inactive
        {
            get
            {
                return _Inactive;
            }
            set
            {
                OnInactiveChanging(value);
                ReportPropertyChanging("Inactive");
                _Inactive = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Inactive");
                OnInactiveChanged();
            }
        }
        private global::System.Boolean _Inactive;
        partial void OnInactiveChanging(global::System.Boolean value);
        partial void OnInactiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LastActivityDate
        {
            get
            {
                return _LastActivityDate;
            }
            set
            {
                OnLastActivityDateChanging(value);
                ReportPropertyChanging("LastActivityDate");
                _LastActivityDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastActivityDate");
                OnLastActivityDateChanged();
            }
        }
        private global::System.DateTime _LastActivityDate;
        partial void OnLastActivityDateChanging(global::System.DateTime value);
        partial void OnLastActivityDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserWhoLastChanedItUserId
        {
            get
            {
                return _UserWhoLastChanedItUserId;
            }
            set
            {
                OnUserWhoLastChanedItUserIdChanging(value);
                ReportPropertyChanging("UserWhoLastChanedItUserId");
                _UserWhoLastChanedItUserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserWhoLastChanedItUserId");
                OnUserWhoLastChanedItUserIdChanged();
            }
        }
        private global::System.Int32 _UserWhoLastChanedItUserId;
        partial void OnUserWhoLastChanedItUserIdChanging(global::System.Int32 value);
        partial void OnUserWhoLastChanedItUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] LastChanged
        {
            get
            {
                return StructuralObject.GetValidValue(_LastChanged);
            }
            set
            {
                OnLastChangedChanging(value);
                ReportPropertyChanging("LastChanged");
                _LastChanged = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LastChanged");
                OnLastChangedChanged();
            }
        }
        private global::System.Byte[] _LastChanged;
        partial void OnLastChangedChanging(global::System.Byte[] value);
        partial void OnLastChangedChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MDPlacesModel", Name="vEnums_Geo_Country")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class vEnums_Geo_Country : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new vEnums_Geo_Country object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="label">Initial value of the Label property.</param>
        public static vEnums_Geo_Country CreatevEnums_Geo_Country(global::System.Int32 id, global::System.String name, global::System.String label)
        {
            vEnums_Geo_Country vEnums_Geo_Country = new vEnums_Geo_Country();
            vEnums_Geo_Country.Id = id;
            vEnums_Geo_Country.Name = name;
            vEnums_Geo_Country.Label = label;
            return vEnums_Geo_Country;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Label
        {
            get
            {
                return _Label;
            }
            set
            {
                OnLabelChanging(value);
                ReportPropertyChanging("Label");
                _Label = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Label");
                OnLabelChanged();
            }
        }
        private global::System.String _Label;
        partial void OnLabelChanging(global::System.String value);
        partial void OnLabelChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CompanyUsingServiceId
        {
            get
            {
                return _CompanyUsingServiceId;
            }
            set
            {
                OnCompanyUsingServiceIdChanging(value);
                ReportPropertyChanging("CompanyUsingServiceId");
                _CompanyUsingServiceId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CompanyUsingServiceId");
                OnCompanyUsingServiceIdChanged();
            }
        }
        private Nullable<global::System.Int32> _CompanyUsingServiceId;
        partial void OnCompanyUsingServiceIdChanging(Nullable<global::System.Int32> value);
        partial void OnCompanyUsingServiceIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ClientName
        {
            get
            {
                return _ClientName;
            }
            set
            {
                OnClientNameChanging(value);
                ReportPropertyChanging("ClientName");
                _ClientName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ClientName");
                OnClientNameChanged();
            }
        }
        private global::System.String _ClientName;
        partial void OnClientNameChanging(global::System.String value);
        partial void OnClientNameChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MDPlacesModel", Name="vEnums_Geo_Place")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class vEnums_Geo_Place : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new vEnums_Geo_Place object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="zIPCode">Initial value of the ZIPCode property.</param>
        public static vEnums_Geo_Place CreatevEnums_Geo_Place(global::System.Int32 id, global::System.String name, global::System.String zIPCode)
        {
            vEnums_Geo_Place vEnums_Geo_Place = new vEnums_Geo_Place();
            vEnums_Geo_Place.Id = id;
            vEnums_Geo_Place.Name = name;
            vEnums_Geo_Place.ZIPCode = zIPCode;
            return vEnums_Geo_Place;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ZIPCode
        {
            get
            {
                return _ZIPCode;
            }
            set
            {
                OnZIPCodeChanging(value);
                ReportPropertyChanging("ZIPCode");
                _ZIPCode = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ZIPCode");
                OnZIPCodeChanged();
            }
        }
        private global::System.String _ZIPCode;
        partial void OnZIPCodeChanging(global::System.String value);
        partial void OnZIPCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CompanyUsingServiceId
        {
            get
            {
                return _CompanyUsingServiceId;
            }
            set
            {
                OnCompanyUsingServiceIdChanging(value);
                ReportPropertyChanging("CompanyUsingServiceId");
                _CompanyUsingServiceId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CompanyUsingServiceId");
                OnCompanyUsingServiceIdChanged();
            }
        }
        private Nullable<global::System.Int32> _CompanyUsingServiceId;
        partial void OnCompanyUsingServiceIdChanging(Nullable<global::System.Int32> value);
        partial void OnCompanyUsingServiceIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ClientName
        {
            get
            {
                return _ClientName;
            }
            set
            {
                OnClientNameChanging(value);
                ReportPropertyChanging("ClientName");
                _ClientName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ClientName");
                OnClientNameChanged();
            }
        }
        private global::System.String _ClientName;
        partial void OnClientNameChanging(global::System.String value);
        partial void OnClientNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Region
        {
            get
            {
                return _Region;
            }
            set
            {
                OnRegionChanging(value);
                ReportPropertyChanging("Region");
                _Region = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Region");
                OnRegionChanged();
            }
        }
        private global::System.String _Region;
        partial void OnRegionChanging(global::System.String value);
        partial void OnRegionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Country
        {
            get
            {
                return _Country;
            }
            set
            {
                OnCountryChanging(value);
                ReportPropertyChanging("Country");
                _Country = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Country");
                OnCountryChanged();
            }
        }
        private global::System.String _Country;
        partial void OnCountryChanging(global::System.String value);
        partial void OnCountryChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MDPlacesModel", Name="vEnums_Geo_Region")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class vEnums_Geo_Region : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new vEnums_Geo_Region object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static vEnums_Geo_Region CreatevEnums_Geo_Region(global::System.Int32 id, global::System.String name)
        {
            vEnums_Geo_Region vEnums_Geo_Region = new vEnums_Geo_Region();
            vEnums_Geo_Region.Id = id;
            vEnums_Geo_Region.Name = name;
            return vEnums_Geo_Region;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CompanyUsingServiceId
        {
            get
            {
                return _CompanyUsingServiceId;
            }
            set
            {
                OnCompanyUsingServiceIdChanging(value);
                ReportPropertyChanging("CompanyUsingServiceId");
                _CompanyUsingServiceId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CompanyUsingServiceId");
                OnCompanyUsingServiceIdChanged();
            }
        }
        private Nullable<global::System.Int32> _CompanyUsingServiceId;
        partial void OnCompanyUsingServiceIdChanging(Nullable<global::System.Int32> value);
        partial void OnCompanyUsingServiceIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ClientName
        {
            get
            {
                return _ClientName;
            }
            set
            {
                OnClientNameChanging(value);
                ReportPropertyChanging("ClientName");
                _ClientName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ClientName");
                OnClientNameChanged();
            }
        }
        private global::System.String _ClientName;
        partial void OnClientNameChanging(global::System.String value);
        partial void OnClientNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Country
        {
            get
            {
                return _Country;
            }
            set
            {
                OnCountryChanging(value);
                ReportPropertyChanging("Country");
                _Country = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Country");
                OnCountryChanged();
            }
        }
        private global::System.String _Country;
        partial void OnCountryChanging(global::System.String value);
        partial void OnCountryChanged();

        #endregion

    
    }

    #endregion

    
}
